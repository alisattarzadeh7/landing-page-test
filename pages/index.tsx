import {Grid, TextField} from '@mui/material'
import type {NextPage} from 'next'
import Head from 'next/head'
import {useRouter} from 'next/router'
import Coin from '../http/models/Coin'
import {Navigation, Pagination, Autoplay, A11y} from 'swiper';
import styles from "../assets/styles/Home.module.scss"
import {Swiper, SwiperSlide} from 'swiper/react';
import 'swiper/css';
import "swiper/css/pagination";
import PercentageFormater from "../components/PercentageFormater";

interface HomeProps {
    coins: Coin[]
}

const Home: NextPage<HomeProps> = ({coins}) => {


    return (
        <div>
            <Head>
                <title>Satrex</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <main className={styles.mainBanner}>
                <div className={styles.bannerContent + '  position-relative'}>
                    <div className={styles.coinCampaign}>
                        <div className="flex">
                            <div className={styles.coinSwiper}>
                                <Swiper
                                    // autoplay={{
                                    //     delay: 2500,
                                    //     disableOnInteraction: false,
                                    // }}
                                    loop
                                    // centeredSlides={true}
                                    modules={[Navigation, Pagination, Autoplay, A11y]}
                                    spaceBetween={50}
                                    slidesPerView={5}
                                    navigation
                                    className="coinSwiperSlides"
                                    onSwiper={(swiper) => console.log(swiper)}
                                    onSlideChange={() => console.log('slide change')}
                                >
                                    {coins.filter(item=>item.destinationAssetSymbol !== 'USDT').map((item)=>{
                                        return (
                                            <SwiperSlide>
                                                <div className="flex column">
                                                    <div className="flex">
                                                        <img src={item.sourceAssetImageAddress} alt={item.pairSymbol+ ' image'} style={{width:45}}/>
                                                        {
                                                            item.pairSymbol
                                                        }
                                                        <PercentageFormater value={item.changeForLastIn24HoursInPercent}/>
                                                    </div>
                                                    <div className="flex">
                                                        {item.lastPriceInToman}
                                                    </div>
                                                    <div className="flex">
                                                        {item.lastPriceInTether}
                                                    </div>
                                                </div>
                                            </SwiperSlide>
                                        )
                                    })}

                                </Swiper></div>
                            <div className="campaign w-100">
                                <Grid container>
                                    <Grid xs={4} item>1</Grid>
                                    <Grid xs={4} item>1</Grid>
                                    <Grid xs={4} item>1</Grid>
                                </Grid>
                            </div>
                        </div>
                    </div>
                    {/*<TextField label="Name" variant="standard" />*/}
                </div>
            </main>

        </div>
    )
}


export async function getStaticProps() {
    // Call an external API endpoint to get posts.
    // You can use any data fetching library
    const coins = await Coin.getALlCoins()

    // By returning { props: { posts } }, the Blog component
    // will receive `posts` as a prop at build time
    return {
        props: {
            coins,
        },
    }
}

export default Home