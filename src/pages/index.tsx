import {Grid} from '@mui/material'
import type {NextPage} from 'next'
import Head from 'next/head'
import Coin from '../http/models/Coin'
import styles from "../assets/styles/Home.module.scss"
import 'swiper/css';
import "swiper/css/pagination";
import HomeCoinSwiper from "../components/HomeCoinSwiper";
import useSWR from 'swr'
import {serverSideTranslations} from 'next-i18next/serverSideTranslations';
import {useTranslation} from 'next-i18next'
import SatrexButton from "../components/SatrexButton";
import MainLogo from "../components/MainLogo/index";
import HomeApplicationPart from "../components/HomeApplicationPart";
import {motion, useViewportScroll, useTransform} from 'framer-motion'
import React, {useEffect} from "react";
import {headerReturned, headerSwitched} from "../utils/events";
import HomeBlogPart from "../components/HomeBlogPart";
import HomeCoinsList from "../components/HomeCoinsList";

const coinListFilterAdapter = async (fn:()=>Promise<Coin[]>)=>{
    const coinList : Coin[] =  await fn()
    return coinList.filter(item => item.destinationAssetSymbol !== 'USDT')
}

const Home: NextPage = () => {

    const {data, error,isValidating} = useSWR('getALlCoins',async ()=> coinListFilterAdapter(Coin.getALlCoins))
    const {t} = useTranslation('common');
    const {scrollY} = useViewportScroll()
    const y = useTransform(scrollY, [0, 200], [-0, -100])
    const opacity = useTransform(scrollY, [0, 300], [1, 0])
    const coinSwiperOpacity = useTransform(scrollY, [250, 600], [1, 0])
    const coinSwiperY = useTransform(scrollY, [250, 600], [0, 150])
    let headerSwitchedTemp = false;
    let headerReturnedTemp = false;
    useEffect(()=>{
        scrollY.onChange(value=>{
            if(value > 500 && !headerSwitchedTemp){
                document.dispatchEvent(headerSwitched);
                headerSwitchedTemp = true
                headerReturnedTemp = false
            }else if(value < 500 && !headerReturnedTemp){
                document.dispatchEvent(headerReturned);
                headerSwitchedTemp = false
                headerReturnedTemp = true
            }
        })
    },[scrollY])


    return (
        <div>
            <Head>
                <title>Satrex</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/public/favicon.ico"/>
            </Head>
            <main className={styles.mainBanner}>
                <div className={styles.logoContainer}>
                    <MainLogo/>
                </div>
                <div className={styles.bannerContent + '  position-relative'}>
                    <div className={styles.coinCampaign}>

                        <div style={{paddingBottom: 60}}>
                            <motion.div style={{y, opacity}}>
                                <h2 className={styles.buyAndSellStyle}>{t('home.sell&Buy')}</h2>
                            </motion.div>
                            <motion.div style={{y, opacity}} className="flex align-items-end">
                                <span className={styles.cryptoTitle}>
                                    {t('home.cryptoCurrencies')}
                                </span>
                                <span className={styles.inMinutesStyle}>{t('home.inMinutes')}</span>
                            </motion.div>
                            <motion.div style={{y, opacity}}>
                                <h3 className={styles.joinUsStyle}>{t('home.joinUs')}</h3>
                            </motion.div>
                            <motion.div style={{y, opacity}}>
                                <SatrexButton label={t('home.doRegisterBtn')} style={{minWidth: 150}}
                                              variant="contained"
                                              //@ts-ignore
                                              color="orange"/>
                            </motion.div>
                        </div>
                        <div className="flex column">
                            <motion.div className={styles.coinSwiper}  style={{y:coinSwiperY,opacity:coinSwiperOpacity}}>
                                    <HomeCoinSwiper
                                        loading={isValidating}
                                        coins={data}/>
                            </motion.div>
                            <div className={styles.campaign}>
                                <Grid container spacing={4}>
                                    <Grid xs={4} item><img src="https://satrex.ir/wp-content/uploads/2022/07/7.jpg"
                                                           alt=""/></Grid>
                                    <Grid xs={4} item><img src="https://satrex.ir/wp-content/uploads/2022/07/9.jpg"
                                                           alt=""/></Grid>
                                    <Grid xs={4} item><img src="https://satrex.ir/wp-content/uploads/2022/07/8.jpg"
                                                           alt=""/></Grid>
                                </Grid>
                            </div>
                        </div>
                    </div>
                    {/*<TextField label="Name" variant="standard" />*/}
                </div>
                <div className={styles.coinListTitleStyles}>
                    <div className="flex"><span className={styles.observeMarketTitle}>{t('بررسی روند بازار')}</span></div>
                    <div className="flex space-between"><span className={styles.observeMarketSubTitle}>{t('اکسپرس رهبران بازار ارزهای دیجیتال')}</span>

                    </div>
                </div>
                <HomeCoinsList isValidating={isValidating} coinList={data}/>
                <HomeApplicationPart/>
                <HomeBlogPart/>
            </main>

        </div>
    )
}

export const getStaticProps = async ({locale}: { locale: string }) => ({
    props: {
        ...(await serverSideTranslations(
            locale,
            ['common'],
        )),
    },
});

export default Home